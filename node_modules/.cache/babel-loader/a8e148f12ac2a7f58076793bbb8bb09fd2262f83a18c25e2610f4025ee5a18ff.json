{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tommy\\\\source\\\\repos\\\\Shutters-Fabric-1\\\\src\\\\pages\\\\Logins\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Form } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport \"../../style.css\";\nimport \"../../styleCustom.css\";\nimport \"../../Components/SelectComponent\";\nimport TextBoxComponent from \"../../Components/TextBoxComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = _ref => {\n  _s();\n  let {\n    formInfo,\n    formState\n  } = _ref;\n  const navigate = useNavigate();\n  const navigateToRegisterForm = () => {\n    navigate('/register');\n  };\n  const navigateToResetPasswordForm = () => {\n    navigate('/resetPassword');\n  };\n  const navigateToCreateNewOrder = () => {\n    navigate('/order');\n  };\n  const [showError, setShowError] = useState(false);\n  const formValues = {\n    user_email: '',\n    user_password: ''\n  };\n  const showHideError = show => {\n    setShowError(show);\n  };\n  const setFormInfoCompanyId = (val, field) => {\n    formState({\n      ...formInfo,\n      company_id: val\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-login-position\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), showError && /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Invalid email or password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validationSchema: Yup.object({\n          email: Yup.string().email(\"Invalid email addresss`\").required(\"Email is required\"),\n          password: Yup.string().required(\"Password is required\")\n        }),\n        onSubmit: async (values, _ref2) => {\n          let {\n            setSubmitting\n          } = _ref2;\n          await new Promise(r => setTimeout(r, 10));\n          setSubmitting(false);\n          formValues.user_email = values.email;\n          formValues.user_password = values.password;\n          const requestOptions = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formValues)\n          };\n          const resUser = await fetch('http://127.0.0.1:8000/user_email_password', requestOptions);\n          const data = await resUser.json();\n          if (data !== undefined) {\n            if (resUser.statusText === \"Not Found\") {\n              showHideError(true);\n            } else {\n              showHideError(false);\n              setFormInfoCompanyId(data.company_id);\n              sessionStorage.setItem('company_id', data.company_id);\n              navigateToCreateNewOrder();\n            }\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(TextBoxComponent, {\n            label: \"Email Address\",\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"jane@formik.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextBoxComponent, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-right nav-menu\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-item\",\n              onClick: navigateToResetPasswordForm,\n              children: \"forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: navigateToRegisterForm,\n            children: \"Register New User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"2hCwmkHHMzKzU3gI90PgqJwkqM0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Formik","Form","useNavigate","Yup","TextBoxComponent","jsxDEV","_jsxDEV","LoginForm","_ref","_s","formInfo","formState","navigate","navigateToRegisterForm","navigateToResetPasswordForm","navigateToCreateNewOrder","showError","setShowError","formValues","user_email","user_password","showHideError","show","setFormInfoCompanyId","val","field","company_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","_ref2","setSubmitting","Promise","r","setTimeout","requestOptions","method","headers","body","JSON","stringify","resUser","fetch","data","json","undefined","statusText","sessionStorage","setItem","label","name","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tommy/source/repos/Shutters-Fabric-1/src/pages/Logins/LoginForm.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Formik, Form } from \"formik\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport \"../../style.css\";\r\nimport \"../../styleCustom.css\";\r\nimport \"../../Components/SelectComponent\";\r\nimport TextBoxComponent from \"../../Components/TextBoxComponent\";\r\n\r\nconst LoginForm = ({formInfo, formState}) => {  \r\n  const navigate = useNavigate();\r\n\r\n  const navigateToRegisterForm = () => {\r\n    navigate('/register');\r\n  };\r\n\r\n  const navigateToResetPasswordForm = () => {\r\n    navigate('/resetPassword');\r\n  };\r\n\r\n  const navigateToCreateNewOrder = () => {\r\n    navigate('/order');\r\n  };\r\n\r\n  const[showError, setShowError] = useState(false)\r\n\r\n  const formValues = {\r\n    user_email: '',\r\n    user_password: ''\r\n  }\r\n\r\n  const showHideError = ((show) => {\r\n    setShowError(show)\r\n  })\r\n\r\n  const setFormInfoCompanyId = ((val, field) => {\r\n    formState({...formInfo, company_id: val})\r\n  })\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n    <div className=\"form-login-position\">\r\n      <h1>Login!</h1>{ showError && <h4 style={{color: 'red'}}>Invalid email or password</h4> }\r\n      <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n        validationSchema={Yup.object({\r\n            email: Yup.string()\r\n                .email(\"Invalid email addresss`\")\r\n                .required(\"Email is required\"),\r\n            password: Yup\r\n                .string()\r\n                .required(\"Password is required\"),  \r\n        })}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise(r => setTimeout(r, 10));\r\n          setSubmitting(false);\r\n          formValues.user_email = values.email;\r\n          formValues.user_password = values.password;\r\n          const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(formValues)\r\n          }\r\n          const resUser = await fetch('http://127.0.0.1:8000/user_email_password', requestOptions)\r\n          const data = await resUser.json()\r\n          if(data !== undefined) {\r\n            if(resUser.statusText === \"Not Found\"){\r\n                showHideError(true)\r\n            }\r\n            else{\r\n                showHideError(false)\r\n                setFormInfoCompanyId(data.company_id)\r\n                sessionStorage.setItem('company_id', data.company_id)\r\n                navigateToCreateNewOrder()\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        <Form>\r\n          <TextBoxComponent label=\"Email Address\" name=\"email\" type=\"email\" placeholder=\"jane@formik.com\" />  \r\n          <br></br>  \r\n          <TextBoxComponent label=\"Password\" name=\"password\" type=\"password\"  />\r\n          <div className=\"nav-right nav-menu\">\r\n            <a className=\"nav-item\" onClick={navigateToResetPasswordForm}>\r\n              forgot password?\r\n            </a>\r\n          </div>\r\n          <br/>\r\n          <button type=\"submit\">Login</button> \r\n          <button type=\"button\" onClick={navigateToRegisterForm}>Register New User</button> \r\n        </Form>\r\n        \r\n      </Formik>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}